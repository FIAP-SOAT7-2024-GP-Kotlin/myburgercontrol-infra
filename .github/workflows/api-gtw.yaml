name: Deploy api-gtw

on:
  workflow_run:
    workflows: [Deployk8s]
    types:
      - completed

jobs:
  deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code [MyBurger ≡]
        uses: actions/checkout@v4

      - name: Set up DigitalOcean [MyBurger ≡]
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN_ACCESS }}

      - name: Get First Droplet ID [MyBurger ≡]
        run: |
          DROPLET_IP=$(doctl compute droplet list 'my-burger-api-gtw' --format 'Public IPv4' --no-header | head -n 1)
          echo "DROPLET_IP=$DROPLET_IP" >> $GITHUB_ENV

      - name: Run a multi-line script
        run: |
          mkdir ../api-gtw
          cp -TR ./api-gtw ../api-gtw
          tar -cvf api-gtw.tar ../api-gtw/

      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "api-gtw.tar"
          target: "~"
          timeout: 120s

      - name: Save kubeconfig
        run: |
          K8S_CLUSTER_NAME=`doctl kubernetes cluster list --no-header --format Name`
          doctl kubernetes cluster kubeconfig save $K8S_CLUSTER_NAME
      
      - name: Get LoadBalancer IP
        run: |
          K8S_LB_IP=kubectl get svc -o=jsonpath='{.items[?(@.spec.type=="LoadBalancer")].status.loadBalancer.ingress[0].ip}'

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            ufw enable
            ufw allow 8080/tcp
            apt-get -y install docker-compose
            tar --overwrite -xvf api-gtw.tar
            cd api-gtw/
            sed 's/#K8S_LB_IP#/'"$K8S_LB_IP"'/g' -i kong/kong.yml
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d
